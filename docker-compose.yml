version: "3.9"

services:
  # === Storages ===

  db:
    image: postgres
    container_name: trello_db
    restart: always
    environment:
      POSTGRES_DB: "trello_db"
      POSTGRES_USER: "moderator"
      POSTGRES_PASSWORD: "2222"
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - ./postgres/primary/pgdata:/var/lib/postgresql/data
      - ./postgres/primary/archive:/mnt/server/archive
      - ./postgres/pg_hba.conf:/configs/pg_hba.conf
      - ./postgres/master.conf:/configs/postgresql.conf
      - ./scripts/migrations/master_setup.sql:/docker-entrypoint-initdb.d/1.sql
      - ./scripts/migrations/schema.sql:/docker-entrypoint-initdb.d/2.sql
      - ./scripts/migrations/create_users.sql:/docker-entrypoint-initdb.d/3.sql
      - ./scripts/migrations/init_data.sql:/docker-entrypoint-initdb.d/4.sql
      - ./postgres/copy_conf.sh:/docker-entrypoint-initdb.d/5.sh
    ports:
      - "5432:5432"
    networks:
      trello-network:
        ipv4_address: 192.168.0.2
    deploy:
      restart_policy:
        condition: on-failure

  db-repl:
    image: postgres
    container_name: trello_db_repl
    restart: always
    command: "postgres -c config_file=/configs/postgresql.conf"
    environment:
      POSTGRES_DB: "trello_db"
      POSTGRES_USER: "moderator"
      POSTGRES_PASSWORD: "2222"
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - ./postgres/standby/pgdata:/var/lib/postgresql/data
      - ./postgres/pg_hba.conf:/configs/pg_hba.conf
      - ./postgres/slave.conf:/configs/postgresql.conf
      - ./postgres/copy_conf.sh:/docker-entrypoint-initdb.d/5.sh
    ports:
      - "5433:5432"
    depends_on:
      - db
    networks:
      trello-network:
        ipv4_address: 192.168.0.3
    deploy:
      restart_policy:
        condition: on-failure

  sessions-storage:
    image: redis:alpine3.18
    container_name: trello_sessions
    restart: always
    environment:
      REDIS_PASSWORD: "1234"
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  # === Services ===

  api-main:
    image: trello_api
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: trello_api_main
    ports:
      - "8000:8000"
    depends_on:
      - db
      - sessions-storage
    volumes:
      - ./cmd/api/logs:/logs
      - ./configs/api_main.yaml:/configs/api.yaml
      - ./.aws:/root/.aws
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  api-read-1:
    image: trello_api
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: trello_api_r1
    ports:
      - "8001:8001"
    depends_on:
      - db
      - sessions-storage
    volumes:
      - ./cmd/api/logs:/logs
      - ./configs/api_read_1.yaml:/configs/api.yaml
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  api-read-2:
    image: trello_api
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: trello_api_r2
    ports:
      - "8002:8002"
    depends_on:
      - db
      - sessions-storage
    volumes:
      - ./cmd/api/logs:/logs
      - ./configs/api_read_2.yaml:/configs/api.yaml
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

#  api-mirror:
#    image: trello_api
#    build:
#      context: .
#      dockerfile: ./cmd/api/Dockerfile
#    container_name: trello_api_mirror
#    ports:
#      - "8003:8003"
#    depends_on:
#      - data-storage
#      - sessions-storage
#    volumes:
#      - ./cmd/api/logs:/logs
#      - ./configs/api_mirror.yaml:/configs/api.yaml
#    networks:
#      - trello-network
#    deploy:
#      restart_policy:
#        condition: on-failure

  balancer:
    image: trello_balancer
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: trello_balancer
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/my_trello.conf:/etc/nginx/conf.d/default.conf
      - ./static:/static
      - ./README.md:/static/README.md
    ports:
      - "80:80"
    depends_on:
      - api-main
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

  ds-admin:
    image: dpage/pgadmin4:latest
    container_name: trello_ds_admin
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vk.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    networks:
      - trello-network
    deploy:
      restart_policy:
        condition: on-failure

networks:
  trello-network:
    name: trello_network
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/24
